@page
@using Domain.Entities;
@model FruitSA_Test_OJ.Pages.Products.Product.DeleteProductModel

@*Page for Deleting Product*@
<div class="card">
    <div class="card-header">
        <h1>Delete @Model.Product.Name</h1>
    </div>
    <div class="card-body">
        <form method="post" enctype="multipart/form-data" id="deleteProduct">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Product.Name)
                    </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Product.Name, new { @disabled = "true" })
                    </div>
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Product.ProductCode)
                     </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Product.ProductCode, new { @disabled = "true" })
                    </div>
                </div>
                    <span asp-validation-for="Product.Name" class="text-danger"></span>
                    <span asp-validation-for="Product.ProductCode" class="text-danger"></span>
            </div>
            <p />
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Product.Description)
                     </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Product.Description, new { @disabled = "true" })
                    </div>
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Product.CategoryId)
                    </div>
                    <div class="col-sm-4">
                        @Html.DropDownListFor(m => m.Product.CategoryId, Model.CategoryList, new { @disabled = "true" })
                    </div>
                </div>
                    <span asp-validation-for="Product.Description" class="text-danger"></span>
                    <span asp-validation-for="Product.CategoryId" class="text-danger"></span>
            </div>
            <p />
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-1">
                        @Html.LabelFor(m => m.Product.Price)
                    </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(m => m.Product.Price, new { @disabled = "true" })
                    </div>
                </div>
                    <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <p />
            <div class="row">
                <div class="form-group">
                    <label asp-for="Product.ImageUrl" class="control-label">Picture</label>
                    <img id="productImage" src="" alt="Product Image" class="img-thumbnail" style="max-width: 300px; display: none;" />
                </div>
            </div>
            <p />
            <div class="row">
                <div class="large-2 columns">
                    <input type="submit" value="Delete" class="btn btn-danger" />
                    <a asp-page="./Product" class="btn btn-secondary ml-2">Back</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var imageId = @Model.Product.ProductId;

            fetch(`?handler=ProductImage&id=${imageId}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
                .then(response => response.json())
                .then(data => {
                    if (data && data.base64Image) {
                        const imgElement = document.getElementById('productImage');
                        imgElement.src = `data:image/jpeg;base64,${data.base64Image}`;
                        imgElement.style.display = 'block';
                    }
                    else {
                        console.log(data);
                    }
                })
                .catch(error => {
                    console.error('Error fetching the image:', error);
                });
        });
    </script>
}
